/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'doshi' at '12/24/14 5:43 PM' with Gradle 2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.bouncycastle:bcprov-jdk15on:1.50'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

mainClassName = System.getProperty("mainClass")

task exec(type:JavaExec) {
   main = mainClass
   classpath = sourceSets.main.runtimeClasspath
   systemProperties = ["java.security.krb5.conf":"krb5.conf",
                       "java.security.auth.login.config":"dev_krb5Login.conf",
                       "javax.security.auth.useSubjectCredsOnly":"false" ]
   workingDir="src/main/conf"
   /*workingDir="${project.projectDir}/src/main/conf"*/
   workingDir="${project.projectDir}/src/main/conf"
}
